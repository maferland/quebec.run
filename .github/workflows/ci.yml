name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: courses_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup test database
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/courses_test?schema=public
          TEST_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/courses_test?schema=public
        run: |
          npx prisma migrate deploy
          npx prisma generate

      - name: Run unit tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/courses_test?schema=public
          TEST_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/courses_test?schema=public
          NEXTAUTH_SECRET: test-secret-for-ci-only-not-secure
          NEXTAUTH_URL: http://localhost:3000
          EMAIL_FROM: test@example.com
          USE_RESEND: false
          EMAIL_SERVER_HOST: localhost
          EMAIL_SERVER_PORT: 1025
          NODE_ENV: test
        run: npm run test

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run E2E tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/courses_test?schema=public
          TEST_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/courses_test?schema=public
          NEXTAUTH_SECRET: test-secret-for-ci-only-not-secure
          NEXTAUTH_URL: http://localhost:3000
          EMAIL_FROM: test@example.com
          USE_RESEND: false
          EMAIL_SERVER_HOST: localhost
          EMAIL_SERVER_PORT: 1025
          NODE_ENV: test
        run: npm run test:e2e

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Check TypeScript
        run: npx tsc --noEmit

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        env:
          DATABASE_URL: postgresql://dummy:dummy@localhost:5432/dummy
          NEXTAUTH_SECRET: dummy-secret-for-build-only
          NEXTAUTH_URL: http://localhost:3000
          EMAIL_FROM: dummy@example.com
          USE_RESEND: false
          EMAIL_SERVER_HOST: localhost
          EMAIL_SERVER_PORT: 1025
        run: npm run build